/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedRootImport } from './routes/authenticated/root'
import { Route as AuthenticatedAircraftImport } from './routes/authenticated/aircraft'
import { Route as AuthenticatedAircraftAircraftIdImport } from './routes/authenticated/aircraft.$aircraftId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRootRoute = AuthenticatedRootImport.update({
  id: '/authenticated/root',
  path: '/authenticated/root',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAircraftRoute = AuthenticatedAircraftImport.update({
  id: '/authenticated/aircraft',
  path: '/authenticated/aircraft',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAircraftAircraftIdRoute =
  AuthenticatedAircraftAircraftIdImport.update({
    id: '/$aircraftId',
    path: '/$aircraftId',
    getParentRoute: () => AuthenticatedAircraftRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/authenticated/aircraft': {
      id: '/authenticated/aircraft'
      path: '/authenticated/aircraft'
      fullPath: '/authenticated/aircraft'
      preLoaderRoute: typeof AuthenticatedAircraftImport
      parentRoute: typeof rootRoute
    }
    '/authenticated/root': {
      id: '/authenticated/root'
      path: '/authenticated/root'
      fullPath: '/authenticated/root'
      preLoaderRoute: typeof AuthenticatedRootImport
      parentRoute: typeof rootRoute
    }
    '/authenticated/aircraft/$aircraftId': {
      id: '/authenticated/aircraft/$aircraftId'
      path: '/$aircraftId'
      fullPath: '/authenticated/aircraft/$aircraftId'
      preLoaderRoute: typeof AuthenticatedAircraftAircraftIdImport
      parentRoute: typeof AuthenticatedAircraftImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAircraftRouteChildren {
  AuthenticatedAircraftAircraftIdRoute: typeof AuthenticatedAircraftAircraftIdRoute
}

const AuthenticatedAircraftRouteChildren: AuthenticatedAircraftRouteChildren = {
  AuthenticatedAircraftAircraftIdRoute: AuthenticatedAircraftAircraftIdRoute,
}

const AuthenticatedAircraftRouteWithChildren =
  AuthenticatedAircraftRoute._addFileChildren(
    AuthenticatedAircraftRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/authenticated/aircraft': typeof AuthenticatedAircraftRouteWithChildren
  '/authenticated/root': typeof AuthenticatedRootRoute
  '/authenticated/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/authenticated/aircraft': typeof AuthenticatedAircraftRouteWithChildren
  '/authenticated/root': typeof AuthenticatedRootRoute
  '/authenticated/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/authenticated/aircraft': typeof AuthenticatedAircraftRouteWithChildren
  '/authenticated/root': typeof AuthenticatedRootRoute
  '/authenticated/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/authenticated/aircraft'
    | '/authenticated/root'
    | '/authenticated/aircraft/$aircraftId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/authenticated/aircraft'
    | '/authenticated/root'
    | '/authenticated/aircraft/$aircraftId'
  id:
    | '__root__'
    | '/'
    | '/authenticated/aircraft'
    | '/authenticated/root'
    | '/authenticated/aircraft/$aircraftId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedAircraftRoute: typeof AuthenticatedAircraftRouteWithChildren
  AuthenticatedRootRoute: typeof AuthenticatedRootRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedAircraftRoute: AuthenticatedAircraftRouteWithChildren,
  AuthenticatedRootRoute: AuthenticatedRootRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/authenticated/aircraft",
        "/authenticated/root"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/authenticated/aircraft": {
      "filePath": "authenticated/aircraft.tsx",
      "children": [
        "/authenticated/aircraft/$aircraftId"
      ]
    },
    "/authenticated/root": {
      "filePath": "authenticated/root.tsx"
    },
    "/authenticated/aircraft/$aircraftId": {
      "filePath": "authenticated/aircraft.$aircraftId.tsx",
      "parent": "/authenticated/aircraft"
    }
  }
}
ROUTE_MANIFEST_END */
