/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedAircraftRouteImport } from './routes/_authenticated/aircraft/route'
import { Route as AuthenticatedAircraftAddImport } from './routes/_authenticated/aircraft/add'
import { Route as AuthenticatedAircraftAircraftIdImport } from './routes/_authenticated/aircraft/$aircraftId'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAircraftRouteRoute = AuthenticatedAircraftRouteImport.update(
  {
    id: '/aircraft',
    path: '/aircraft',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedAircraftAddRoute = AuthenticatedAircraftAddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => AuthenticatedAircraftRouteRoute,
} as any)

const AuthenticatedAircraftAircraftIdRoute =
  AuthenticatedAircraftAircraftIdImport.update({
    id: '/$aircraftId',
    path: '/$aircraftId',
    getParentRoute: () => AuthenticatedAircraftRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/aircraft': {
      id: '/_authenticated/aircraft'
      path: '/aircraft'
      fullPath: '/aircraft'
      preLoaderRoute: typeof AuthenticatedAircraftRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/aircraft/$aircraftId': {
      id: '/_authenticated/aircraft/$aircraftId'
      path: '/$aircraftId'
      fullPath: '/aircraft/$aircraftId'
      preLoaderRoute: typeof AuthenticatedAircraftAircraftIdImport
      parentRoute: typeof AuthenticatedAircraftRouteImport
    }
    '/_authenticated/aircraft/add': {
      id: '/_authenticated/aircraft/add'
      path: '/add'
      fullPath: '/aircraft/add'
      preLoaderRoute: typeof AuthenticatedAircraftAddImport
      parentRoute: typeof AuthenticatedAircraftRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAircraftRouteRouteChildren {
  AuthenticatedAircraftAircraftIdRoute: typeof AuthenticatedAircraftAircraftIdRoute
  AuthenticatedAircraftAddRoute: typeof AuthenticatedAircraftAddRoute
}

const AuthenticatedAircraftRouteRouteChildren: AuthenticatedAircraftRouteRouteChildren =
  {
    AuthenticatedAircraftAircraftIdRoute: AuthenticatedAircraftAircraftIdRoute,
    AuthenticatedAircraftAddRoute: AuthenticatedAircraftAddRoute,
  }

const AuthenticatedAircraftRouteRouteWithChildren =
  AuthenticatedAircraftRouteRoute._addFileChildren(
    AuthenticatedAircraftRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAircraftRouteRoute: typeof AuthenticatedAircraftRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAircraftRouteRoute: AuthenticatedAircraftRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/aircraft': typeof AuthenticatedAircraftRouteRouteWithChildren
  '/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
  '/aircraft/add': typeof AuthenticatedAircraftAddRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/aircraft': typeof AuthenticatedAircraftRouteRouteWithChildren
  '/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
  '/aircraft/add': typeof AuthenticatedAircraftAddRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/aircraft': typeof AuthenticatedAircraftRouteRouteWithChildren
  '/_authenticated/aircraft/$aircraftId': typeof AuthenticatedAircraftAircraftIdRoute
  '/_authenticated/aircraft/add': typeof AuthenticatedAircraftAddRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/aircraft' | '/aircraft/$aircraftId' | '/aircraft/add'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/aircraft' | '/aircraft/$aircraftId' | '/aircraft/add'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/aircraft'
    | '/_authenticated/aircraft/$aircraftId'
    | '/_authenticated/aircraft/add'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/aircraft"
      ]
    },
    "/_authenticated/aircraft": {
      "filePath": "_authenticated/aircraft/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/aircraft/$aircraftId",
        "/_authenticated/aircraft/add"
      ]
    },
    "/_authenticated/aircraft/$aircraftId": {
      "filePath": "_authenticated/aircraft/$aircraftId.tsx",
      "parent": "/_authenticated/aircraft"
    },
    "/_authenticated/aircraft/add": {
      "filePath": "_authenticated/aircraft/add.tsx",
      "parent": "/_authenticated/aircraft"
    }
  }
}
ROUTE_MANIFEST_END */
